var d=(s,o,r)=>new Promise((a,i)=>{var n=e=>{try{c(r.next(e))}catch(u){i(u)}},t=e=>{try{c(r.throw(e))}catch(u){i(u)}},c=e=>e.done?a(e.value):Promise.resolve(e.value).then(n,t);c((r=r.apply(s,o)).next())});import{u as l}from"./useQuery-DSPDO9qK.js";import{e as m}from"./index-bsRtcvq8.js";import{s as p}from"./client-C2yhLZEv.js";const v=()=>{const s=m(),{data:o=[],isLoading:r,error:a}=l({queryKey:["projects"],queryFn:()=>d(void 0,null,function*(){const{data:n,error:t}=yield p.from("projects").select("*").order("created_at",{ascending:!1}).limit(50);if(t)throw t;return n}),staleTime:5*60*1e3});return{projects:o,isLoading:r,error:a,invalidateProjects:()=>{s.invalidateQueries({queryKey:["projects"]})}}};export{v as u};
