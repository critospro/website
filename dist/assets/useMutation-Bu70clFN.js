var U=Object.defineProperty,j=Object.defineProperties;var z=Object.getOwnPropertyDescriptors;var w=Object.getOwnPropertySymbols;var I=Object.prototype.hasOwnProperty,A=Object.prototype.propertyIsEnumerable;var R=e=>{throw TypeError(e)};var K=(e,t,s)=>t in e?U(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,O=(e,t)=>{for(var s in t||(t={}))I.call(t,s)&&K(e,s,t[s]);if(w)for(var s of w(t))A.call(t,s)&&K(e,s,t[s]);return e},g=(e,t)=>j(e,z(t));var M=(e,t,s)=>t.has(e)||R("Cannot "+s);var i=(e,t,s)=>(M(e,t,"read from private field"),s?s.call(e):t.get(e)),b=(e,t,s)=>t.has(e)?R("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,s),f=(e,t,s,r)=>(M(e,t,"write to private field"),r?r.call(e,s):t.set(e,s),s),p=(e,t,s)=>(M(e,t,"access private method"),s);import{c as D,S as Q,s as T,j as P,k as B,n as L,e as F,l as G,m as H}from"./index-bsRtcvq8.js";import{r as y}from"./vendor-DV1f2hfo.js";/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const X=D("Palette",[["circle",{cx:"13.5",cy:"6.5",r:".5",fill:"currentColor",key:"1okk4w"}],["circle",{cx:"17.5",cy:"10.5",r:".5",fill:"currentColor",key:"f64h9f"}],["circle",{cx:"8.5",cy:"7.5",r:".5",fill:"currentColor",key:"fotxhn"}],["circle",{cx:"6.5",cy:"12.5",r:".5",fill:"currentColor",key:"qy21gx"}],["path",{d:"M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z",key:"12rzf8"}]]);var a,c,o,h,n,x,k,q,J=(q=class extends Q{constructor(t,s){super();b(this,n);b(this,a);b(this,c);b(this,o);b(this,h);f(this,a,t),this.setOptions(s),this.bindMethods(),p(this,n,x).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){var r;const s=this.options;this.options=i(this,a).defaultMutationOptions(t),T(this.options,s)||i(this,a).getMutationCache().notify({type:"observerOptionsUpdated",mutation:i(this,o),observer:this}),s!=null&&s.mutationKey&&this.options.mutationKey&&P(s.mutationKey)!==P(this.options.mutationKey)?this.reset():((r=i(this,o))==null?void 0:r.state.status)==="pending"&&i(this,o).setOptions(this.options)}onUnsubscribe(){var t;this.hasListeners()||(t=i(this,o))==null||t.removeObserver(this)}onMutationUpdate(t){p(this,n,x).call(this),p(this,n,k).call(this,t)}getCurrentResult(){return i(this,c)}reset(){var t;(t=i(this,o))==null||t.removeObserver(this),f(this,o,void 0),p(this,n,x).call(this),p(this,n,k).call(this)}mutate(t,s){var r;return f(this,h,s),(r=i(this,o))==null||r.removeObserver(this),f(this,o,i(this,a).getMutationCache().build(i(this,a),this.options)),i(this,o).addObserver(this),i(this,o).execute(t)}},a=new WeakMap,c=new WeakMap,o=new WeakMap,h=new WeakMap,n=new WeakSet,x=function(){var s,r;const t=(r=(s=i(this,o))==null?void 0:s.state)!=null?r:B();f(this,c,g(O({},t),{isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset}))},k=function(t){L.batch(()=>{var s,r,u,m,l,v,S,E;if(i(this,h)&&this.hasListeners()){const d=i(this,c).variables,C=i(this,c).context;(t==null?void 0:t.type)==="success"?((r=(s=i(this,h)).onSuccess)==null||r.call(s,t.data,d,C),(m=(u=i(this,h)).onSettled)==null||m.call(u,t.data,null,d,C)):(t==null?void 0:t.type)==="error"&&((v=(l=i(this,h)).onError)==null||v.call(l,t.error,d,C),(E=(S=i(this,h)).onSettled)==null||E.call(S,void 0,t.error,d,C))}this.listeners.forEach(d=>{d(i(this,c))})})},q);function Y(e,t){const s=F(),[r]=y.useState(()=>new J(s,e));y.useEffect(()=>{r.setOptions(e)},[r,e]);const u=y.useSyncExternalStore(y.useCallback(l=>r.subscribe(L.batchCalls(l)),[r]),()=>r.getCurrentResult(),()=>r.getCurrentResult()),m=y.useCallback((l,v)=>{r.mutate(l,v).catch(G)},[r]);if(u.error&&H(r.options.throwOnError,[u.error]))throw u.error;return g(O({},u),{mutate:m,mutateAsync:u.mutate})}export{X as P,Y as u};
